// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using RazzMaTazz.Models;
using System;

namespace RazzMaTazz.Migrations
{
    [DbContext(typeof(IB_RM_WTContext))]
    partial class IB_RM_WTContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RazzMaTazz.Models.RequestMetrics", b =>
                {
                    b.Property<long>("RequestMetricId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apicontroller");

                    b.Property<string>("Apimethod");

                    b.Property<string>("Apiversion");

                    b.Property<int?>("BankNumber");

                    b.Property<int?>("Channel");

                    b.Property<long?>("Duration");

                    b.Property<long?>("EmpId");

                    b.Property<string>("PartnerKey");

                    b.Property<string>("ReasonPhrase");

                    b.Property<string>("RequestBody");

                    b.Property<string>("RequestCert");

                    b.Property<string>("ResponseBody");

                    b.Property<int?>("ResponseCode");

                    b.Property<string>("ServerName");

                    b.Property<long?>("SessionId");

                    b.Property<string>("SourceIp");

                    b.Property<int>("SourcePort");

                    b.Property<DateTime>("Timestamp");

                    b.Property<string>("Uri");

                    b.Property<long?>("UserId");

                    b.Property<string>("Verb");

                    b.HasKey("RequestMetricId");

                    b.ToTable("RequestMetrics");
                });

            modelBuilder.Entity("RazzMaTazz.Models.RequestMetricsDetails", b =>
                {
                    b.Property<long>("RequestMetricsDetailsId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("BeginTime");

                    b.Property<DateTime?>("EndTime");

                    b.Property<bool?>("IsError");

                    b.Property<string>("RequestDetail");

                    b.Property<long>("RequestMetricId");

                    b.Property<long?>("RequestMetricsExtId");

                    b.Property<long?>("RequestTime");

                    b.Property<string>("RequestType");

                    b.HasKey("RequestMetricsDetailsId");

                    b.HasIndex("RequestMetricId");

                    b.ToTable("RequestMetricsDetails");
                });

            modelBuilder.Entity("RazzMaTazz.Models.RequestMetricsExtDetails", b =>
                {
                    b.Property<long>("RequestMetricsExtId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RequestDetail");

                    b.Property<string>("ResponseDetail");

                    b.HasKey("RequestMetricsExtId");

                    b.ToTable("RequestMetricsExtDetails");
                });

            modelBuilder.Entity("RazzMaTazz.Models.RequestMetricsDetails", b =>
                {
                    b.HasOne("RazzMaTazz.Models.RequestMetrics", "RequestMetric")
                        .WithMany("RequestMetricsDetails")
                        .HasForeignKey("RequestMetricId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
